<html lang="en" ng-app="earsiv">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Earsiv_Portal</title>

    <!-- Gerekli stiller dosyaları -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css" integrity="sha512-jnSuA4Ss2PkkikSOLtYs8BlYIeeIK1h99ty4YfvRPAlzr377vr3CXDb7sb7eEEBYjDtcYj+AjBH3FLv5uSJuXg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css" integrity="sha512-3pIirOrwegjM6erE5gPSwkUzO+3cTjpnV9lexlNZqvupR64iZBnOOTiiLPb9M36zpMScbmUNIcHUqKD47M719g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- AngularJS script kütüphanesi eklendi -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <script src="https://rawgit.com/michaelbromley/angularUtils-pagination/master/dirPagination.js"></script>
</head>
<body class="container p-5">
    <!-- AngularJS app oluşturuldu -->
    <script>
        var earsivApp = angular.module('earsiv', ['angularUtils.directives.dirPagination']);

        angular.module('earsiv').run(function ($rootScope) {
            $rootScope.BelgeListesiGlobal = []; // Belge Listesi Global olarak tanımlandı
        });
    </script>
    
    @RenderBody()

    <!-- Gerekli JS CDN eklemeleri -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.js" integrity="sha512-+k1pnlgt4F1H8L7t3z95o3/KO+o78INEcXTbnoJQ/F2VqDVhWoaiVml/OEHv9HsVgxUaVW+IbiZPUJQfF/YxZw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.min.js" integrity="sha512-ykZ1QQr0Jy/4ZkvKuqWn4iF3lqPZyij9iRv6sGqLRdTPkY69YX6+7wvVGmsdBbiIfN/8OdsI7HABjvEok6ZopQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        // Date Controller
        earsivApp.controller('formController', function ($scope, $http, $sce, $rootScope) {
            $scope.date = {};

            // Tarih alanlarına ilk değerler atandı
            $scope.date.startDate = new Date('@DateTime.Now.ToString("yyyy-MM-dd")');
            $scope.date.endDate = new Date('@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")');

            $scope.getData = function (date) {

                // GET Method
                $http.get('/Earsiv/GetData?StartDate=' + formatDate($scope.date.startDate) + '&EndDate=' + formatDate($scope.date.endDate))
                    .then(function (response) {
                        // Başarılı
                        ShowToast("İşlem başarılı", 3);
                        $rootScope.$broadcast('BelgeListesiGuncelleme', response.data.data);

                    }, function (error) {
                        ShowToast(error, -1);
                });
            }
        });

        // Table Button Controller
        earsivApp.controller('buttonController', function ($scope, $http, $sce, $rootScope) {

            // Arama anahtarı değiştiğinde filtreleme yapılır
            $scope.$watch('searchKey', function (newVal) {
                // Arama işlemi diğer controller içerisinde tetikleniyor
                $rootScope.$broadcast('BelgeListesiFiltrele', newVal);
            });

            // Belge Görüntüleme Buton işlevi
            $scope.belgeGoruntule = function () {
                var seciliBelgeler = $('.belge-check').filter(':checked'); // Tablo içerisinden seçilen belgeler listelendi
                
                // Seçilen belge sayısı birden fazla ise
                if (seciliBelgeler.length > 1) {
                    ShowToast('Birden fazla belge üzerinden görüntüleme işlemi yapamazsınız!', 0);
                }
                else if (seciliBelgeler.length == 0) { // Hiç belge seçilmediyse
                    ShowToast('Görüntüleme işlemi için, lütfen önce belge seçiniz!', 0);
                }
                else { // Sadece bir belge seçildi ise
                    var belgeId = seciliBelgeler.eq(0).attr('id').replace(/^belge_/, ''); // Seçili belgenin Belge numarası alındı
                    
                    // Belge Listesi içerisinden bu belge numarasına ait belge bulunup bilgileri alınıyor
                    var belge = $rootScope.BelgeListesiGlobal.find(function (item) {
                        return item.belgeNumarasi == belgeId;
                    });
                    
                    // Belge görüntüsü için arka plana get isteği atılıyor
                    $http.get('/Earsiv/ShowDocument?Ettn=' + belge.ettn + '&').then(function (response) {
                        
                    }, function (error) {
                        ShowToast(error, -1);
                    });
                }
            }
        });

        // Table Controller
        earsivApp.controller('tableController', function ($scope, $http, $sce, $rootScope) {
            // Sorgula butonuna tıklanması sonrası veri listeleme işlemi bu controller içerisinde tetiklendi
            $scope.$on('BelgeListesiGuncelleme', function (event, data) {
                // Onaylı sütunu bilgisi simge olarak ayarlanıyor
                $scope.BelgeListesi = data.map(item => {
                    if (item.onayDurumu === 'Onaylandı') {
                        item.onayDurumu = 'check';  // Tik işareti
                    } else if (item.onayDurumu === 'Onaylanmadı') {
                        item.onayDurumu = 'ban';  // Engel ifadesi
                    } else if (item.onayDurumu === 'Silinmiş') {
                        item.onayDurumu = 'times';  // Çarpı işareti
                    }
                    return item;
                });

                // Liste Aktarımı yapılıyor
                $scope.FiltreliBelgeListesi = $scope.BelgeListesi;
                $rootScope.BelgeListesiGlobal = $scope.BelgeListesi;
            });

            // Arama alanına yazı yazıldığında veri filtreleme işlemi bu controller içerisinde tetiklendi
            $scope.$on('BelgeListesiFiltrele', function (event, data) {
                if (!data) {
                    // Arama boşsa tüm listeyi göster
                    $scope.FiltreliBelgeListesi = $scope.BelgeListesi;
                } else {
                    // Eğer BelgeListesi boş değilse arama yapılıyor
                    if($scope.BelgeListesi != undefined){
                        // Arama anahtarı tanımlı ise filtreleme yap
                        $scope.FiltreliBelgeListesi = $scope.BelgeListesi.filter(item =>
                            (item.belgeNumarasi && item.belgeNumarasi.includes(data)) ||
                            (item.aliciVknTckn && item.aliciVknTckn.includes(data)) ||
                            (item.aliciUnvanAdSoyad && item.aliciUnvanAdSoyad.includes(data)) ||
                            (item.belgeTuru && item.belgeTuru.includes(data))
                        );

                        $rootScope.BelgeListesiGlobal = $scope.BelgeListesi;
                    }
                }
            });
        });
    </script>

    <!-- Genel Fonksiyonlar ve Tanımlar -->
    <script>
        // Tarih formatını Backend formatına uyarlayan fonksiyon
        function formatDate(date) {
            if (!date) return '';
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [year, month, day].join('-');
        }

        // Toastr Mesaj bildirimi tanım ve fonksiyonları
        toastr.options = {
            "closeButton": true,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": true,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        // Toast Mesajı Gösteren Fonksiyon
        function ShowToast(msg, type) {
            if (type == 3) {
                toastr.success(msg, 'Başarılı');
            }
            else if (type == 0) {
                toastr.warning(msg, 'Uyarı');
            }
            else if (type == 1) {
                toastr.info(msg, 'Bilgi');
            }
            else if (type == -1) {
                toastr.error(msg, 'Hata');
            }
        }
    </script>
</body>
</html>
